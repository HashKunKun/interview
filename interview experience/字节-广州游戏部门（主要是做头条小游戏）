1,零拷贝
2,多路复用-select，poll，epoll
3，tcp socket中的backlog。参考：https://segmentfault.com/a/1190000019252960
4，netty为什么高性能。
4，算法：有一颗二叉树，叶子节点的深度相同，整颗树从上到下，从左到右编号为1,2,3,4...2^D-1,其中D为深度，只有一个根节点的时候
深度D为1，设想一个寻路算法，每一次的寻路就是从根节点开始，判断当前的节点需要向左子树还是向右子树走，然后一直往下，直到走到叶
子节点为止，初始情况下，每个节点都是需要往左子树走，但是每个节点被走过一次，那么下一次会向相反方向走。比如第一次经过根节点，
需要往左走，第二次经过根节点需要往右走。请问，在深度为D的二叉树中，第N次寻路，会走到哪个叶子节点。
样例输入：D,N
3,4
输出
6
